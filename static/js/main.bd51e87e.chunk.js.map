{"version":3,"sources":["utils/utils.ts","components/Timetable.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["hours","min","sec","ms","time","Date","setHours","defaultDaysOfWeek","Wrapper","styled","div","height","Timetable","courses","daysOfWeek","timeRange","eachMinuteOfInterval","start","end","step","rowHeight","value","unit","rowCount","length","columnCount","totalHeight","events","Array","course","eventTimes","info","className","map","i","Timeline","date","format","Grid","cells","push","cols","EventGrid","App","href","icon","faGithub","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd51e87e.chunk.js","sourcesContent":["export const hours = (\r\n  hours: number,\r\n  min: number = 0,\r\n  sec: number = 0,\r\n  ms: number = 0\r\n) => {\r\n  const time = new Date();\r\n  time.setHours(hours, min, sec, ms);\r\n  return time;\r\n};\r\n","import \"./Timetable.scss\";\r\nimport styled from \"styled-components\";\r\nimport { hours } from \"../utils/utils\";\r\nimport { Course, CourseEvent, Measurement } from \"../types\";\r\nimport { isSameDay, format, eachMinuteOfInterval } from \"date-fns\";\r\n\r\nconst defaultDaysOfWeek = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n  \"Sunday\",\r\n];\r\n\r\nconst Wrapper = styled.div`\r\n  height: ${({ height }: { height: string }) => height};\r\n`;\r\n\r\nexport const Timetable = ({\r\n  courses = [],\r\n  daysOfWeek = defaultDaysOfWeek,\r\n  timeRange = eachMinuteOfInterval(\r\n    { start: hours(7), end: hours(17) },\r\n    { step: 60 }\r\n  ),\r\n  rowHeight = { value: 3, unit: \"rem\" },\r\n}: {\r\n  courses?: Course[];\r\n  daysOfWeek?: string[];\r\n  timeRange?: Date[];\r\n  rowHeight?: Measurement;\r\n}) => {\r\n  const rowCount = timeRange.length;\r\n  const columnCount = daysOfWeek.length;\r\n  const totalHeight = {\r\n    value: rowHeight.value * rowCount,\r\n    unit: rowHeight.unit,\r\n  };\r\n  // Sort classes into days of the week, with Sunday is 0, Monday is 1, and so on.\r\n  const events: CourseEvent[][] = Array(7);\r\n  for (let course of courses) {\r\n    const { eventTimes, info } = course;\r\n    for (let time of eventTimes) {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"timetable\">\r\n      <div className=\"timetable-header\">\r\n        {daysOfWeek.map((value, i) => (\r\n          <div key={i}>{value}</div>\r\n        ))}\r\n      </div>\r\n      <Timeline timeRange={timeRange} height={totalHeight} />\r\n      <div className=\"timetable-body\">\r\n        <Grid\r\n          rowCount={rowCount}\r\n          columnCount={columnCount}\r\n          height={totalHeight}\r\n        />\r\n        <EventGrid events={events} timeRange={timeRange} height={totalHeight} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Timeline = ({\r\n  timeRange,\r\n  height,\r\n}: {\r\n  timeRange: Date[];\r\n  height: Measurement;\r\n}) => {\r\n  return (\r\n    <Wrapper className=\"timeline\" height={`${height.value}${height.unit}`}>\r\n      {timeRange.map((date, i) => (\r\n        <div key={i}>{format(date, \"HH:mm\")}</div>\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Grid = ({\r\n  rowCount,\r\n  columnCount,\r\n  height,\r\n}: {\r\n  rowCount: number;\r\n  columnCount: number;\r\n  height: Measurement;\r\n}) => {\r\n  const cells = [];\r\n  for (let i = 0; i < rowCount; i++) {\r\n    cells.push(<div key={i}></div>);\r\n  }\r\n  const cols = [];\r\n  for (let i = 0; i < columnCount; i++) {\r\n    cols.push(<div key={i}>{cells}</div>);\r\n  }\r\n  return (\r\n    <Wrapper\r\n      className=\"timetable-grid\"\r\n      height={`${height.value}${height.unit}`}\r\n    >\r\n      {cols}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst EventGrid = ({\r\n  events,\r\n  timeRange,\r\n  height,\r\n}: {\r\n  events: CourseEvent[][];\r\n  timeRange: Date[];\r\n  height: Measurement;\r\n}) => {\r\n  return (\r\n    <div className=\"event-grid\">\r\n      {/* <div>\r\n        <div\r\n          className=\"event-box\"\r\n          style={{ top: \"20px\", left: \"0%\", height: 30, width: \"22%\" }}\r\n        ></div>\r\n        <div\r\n          className=\"event-box\"\r\n          style={{ top: \"20px\", left: \"25%\", height: 100, width: \"22%\" }}\r\n        ></div>\r\n        <div\r\n          className=\"event-box\"\r\n          style={{ top: \"20px\", left: \"50%\", height: 30, width: \"22%\" }}\r\n        ></div>\r\n        <div\r\n          className=\"event-box\"\r\n          style={{ top: \"20px\", left: \"75%\", height: 30, width: \"22%\" }}\r\n        ></div>\r\n      </div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EventBox = (event: CourseEvent) => {};\r\n\r\n// const Column = ({ courseClasses }) => {};\r\n","import \"./App.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Timetable } from \"./Timetable\";\r\nimport { eachMinuteOfInterval } from \"date-fns\";\r\nimport { hours } from \"../utils/utils\";\r\n\r\nfunction App() {\r\n  const timeRange = eachMinuteOfInterval(\r\n    { start: hours(7), end: hours(17) },\r\n    { step: 60 }\r\n  );\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav>\r\n          <div className=\"title\">\r\n            {/* <svg\r\n              className=\"logo\"\r\n              width=\"54\"\r\n              height=\"54\"\r\n              viewBox=\"0 0 54 54\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path d=\"M13.5 22.1c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05zM0 38.3c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05z\" />\r\n            </svg> */}\r\n            {/* <img className=\"logo\" src={logo} alt=\"Logo\" /> */}\r\n            <span>Course Scheduler</span>\r\n          </div>\r\n          <a\r\n            className=\"github\"\r\n            href=\"https://github.com/phineasla/course-scheduler\"\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} size=\"2x\" />\r\n          </a>\r\n        </nav>\r\n      </header>\r\n      <Timetable />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}