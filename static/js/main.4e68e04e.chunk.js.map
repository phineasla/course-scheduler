{"version":3,"sources":["components/Timetable.tsx","utils/utils.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultDayOfWeek","Timetable","dayOfWeek","startTime","dayjs","hour","minute","endTime","step","stepUnit","cellHeight","timelineRange","start","end","unit","isBefore","range","current","add","push","timeRange","className","map","value","i","style","height","format","j","App","width","viewBox","xmlns","d","href","icon","faGithub","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAKMA,EAAmB,CACvB,SACA,UACA,YACA,WACA,SACA,WACA,UAyDWC,EAAY,SAAC,GAOnB,IAAD,IANJC,iBAMI,MANQF,EAMR,MALJG,iBAKI,MALQC,MAAQC,KAAK,GAAGC,OAAO,GAK/B,MAJJC,eAII,MAJMH,MAAQC,KAAK,IAAIC,OAAO,GAI9B,MAHJE,YAGI,MAHG,EAGH,MAFJC,gBAEI,MAFO,OAEP,MADJC,kBACI,MADS,OACT,EACEC,EC3EiB,SACvBC,EACAC,EACAL,EACAM,GAEA,GAAID,EAAIE,SAASH,GAAQ,KAAM,mBAG/B,IAFA,IAAMI,EAAQ,CAACJ,GACXK,EAAUL,EACPK,EAAQF,SAASF,IACtBI,EAAUA,EAAQC,IAAIV,EAAMM,GAC5BE,EAAMG,KAAKF,GAEb,OAAOD,ED8DeI,CAAUjB,EAAWI,EAASC,EAAMC,GAE1D,OACE,sBAAKY,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACGnB,EAAUoB,KAAI,SAACC,EAAOC,GAAR,OACb,8BAAcD,GAAJC,QAGd,qBAAKH,UAAU,WAAf,SACGV,EAAcW,KAAI,SAACC,EAAOC,GAAR,OACjB,qBAAaC,MAAO,CAAEC,OAAQhB,GAA9B,SACGa,EAAMI,OAAO,UADNH,QAKd,qBAAKH,UAAU,YAAf,SACGnB,EAAUoB,KAAI,SAACC,EAAOC,GAAR,OACb,8BACGb,EAAcW,KAAI,SAACC,EAAOK,GAAR,OACjB,qBAAaH,MAAO,CAAEC,OAAQhB,IAApBkB,OAFJJ,YE5DLK,MA9Bf,WACE,OACE,qCACE,iCACE,gCACE,sBAAKR,UAAU,QAAf,UACE,qBACEA,UAAU,OACVS,MAAM,KACNJ,OAAO,KACPK,QAAQ,YACRC,MAAM,6BALR,SAOE,sBAAMC,EAAE,0VAEV,uDAEF,mBACEZ,UAAU,SACVa,KAAK,gDAFP,SAIE,cAAC,IAAD,CAAiBC,KAAMC,IAAUC,KAAK,cAI5C,cAAC,EAAD,QChBSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4e68e04e.chunk.js","sourcesContent":["import \"./Timetable.scss\";\r\nimport styled from \"styled-components\";\r\nimport dayjs, { Dayjs } from \"dayjs\";\r\nimport { timeRange } from \"../utils/utils\";\r\n\r\nconst defaultDayOfWeek = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n  \"Sunday\",\r\n];\r\n\r\n// const DayHeader = ({ dayOfWeek }: { dayOfWeek: string[] }) => {\r\n//   const DayHeaderDiv = styled.div`\r\n//     grid-template-columns: repeat(${dayOfWeek.length}, 1fr);\r\n//   `;\r\n\r\n//   return (\r\n//     <DayHeaderDiv className=\"DayHeader\">\r\n//       {dayOfWeek.map((value, index, array) => (\r\n//         <span className=\"DayCell\">{value}</span>\r\n//       ))}\r\n//     </DayHeaderDiv>\r\n//   );\r\n// };\r\n\r\n// const Timeline = ({\r\n//   startTime,\r\n//   endTime,\r\n//   step,\r\n//   stepUnit,\r\n//   cellHeight,\r\n// }: {\r\n//   startTime: Dayjs;\r\n//   endTime: Dayjs;\r\n//   step: number;\r\n//   stepUnit: string;\r\n//   cellHeight: string;\r\n// }) => {\r\n//   const range = timeRange(startTime, endTime, step, stepUnit);\r\n//   return (\r\n//     <div className=\"timeline\">\r\n//       {range.map((value, i) => (\r\n//         <div key={i} style={{ height: cellHeight }}>\r\n//           {value.format(\"HH:mm\")}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const TimetableGrid = ({ numDayOfWeek }: { numDayOfWeek: number }) => {\r\n//   const TimetableGridDiv = styled.div`\r\n//     grid-template-columns: repeat(${numDayOfWeek}, 1fr);\r\n//   `;\r\n\r\n//   const gridCols = [];\r\n//   for (let i = 0; i < numDayOfWeek; i++) {\r\n//     gridCols.push(<div className=\"Timetable--Grid--Col\"></div>);\r\n//   }\r\n\r\n//   return (\r\n//     <TimetableGridDiv className=\"Timetable--Grid\">{gridCols}</TimetableGridDiv>\r\n//   );\r\n// };\r\n\r\nexport const Timetable = ({\r\n  dayOfWeek = defaultDayOfWeek,\r\n  startTime = dayjs().hour(7).minute(0),\r\n  endTime = dayjs().hour(17).minute(0),\r\n  step = 1,\r\n  stepUnit = \"hour\",\r\n  cellHeight = \"3rem\",\r\n}) => {\r\n  const timelineRange = timeRange(startTime, endTime, step, stepUnit);\r\n\r\n  return (\r\n    <div className=\"timetable\">\r\n      <div className=\"day--header\">\r\n        {dayOfWeek.map((value, i) => (\r\n          <div key={i}>{value}</div>\r\n        ))}\r\n      </div>\r\n      <div className=\"timeline\">\r\n        {timelineRange.map((value, i) => (\r\n          <div key={i} style={{ height: cellHeight }}>\r\n            {value.format(\"HH:mm\")}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"day--grid\">\r\n        {dayOfWeek.map((value, i) => (\r\n          <div key={i}>\r\n            {timelineRange.map((value, j) => (\r\n              <div key={j} style={{ height: cellHeight }} />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Dayjs } from \"dayjs\";\r\n\r\nexport const timeRange = (\r\n  start: Dayjs,\r\n  end: Dayjs,\r\n  step: number,\r\n  unit: string\r\n) => {\r\n  if (end.isBefore(start)) throw \"Wrong time order\";\r\n  const range = [start];\r\n  let current = start;\r\n  while (current.isBefore(end)) {\r\n    current = current.add(step, unit);\r\n    range.push(current);\r\n  }\r\n  return range;\r\n};\r\n","import \"./App.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Timetable } from \"./Timetable\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav>\r\n          <div className=\"title\">\r\n            <svg\r\n              className=\"logo\"\r\n              width=\"54\"\r\n              height=\"54\"\r\n              viewBox=\"0 0 54 54\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path d=\"M13.5 22.1c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05zM0 38.3c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05z\" />\r\n            </svg>\r\n            <span>Course Scheduler</span>\r\n          </div>\r\n          <a\r\n            className=\"github\"\r\n            href=\"https://github.com/phineasla/course-scheduler\"\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} size=\"2x\" />\r\n          </a>\r\n        </nav>\r\n      </header>\r\n      <Timetable />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}