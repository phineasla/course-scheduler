{"version":3,"sources":["components/Timetable.tsx","utils/utils.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultDaysOfWeek","DayHeader","daysOfWeek","className","map","value","i","Timeline","timeRange","cellHeight","height","style","format","DayGrid","numDaysOfWeek","col","length","push","cols","Timetable","startTime","dayjs","hour","minute","endTime","step","stepUnit","cellHeightUnit","timelineRange","start","end","unit","isBefore","Error","range","current","add","yCells","xCells","totalHeight","App","href","icon","faGithub","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAIMA,EAAoB,CACxB,SACA,UACA,YACA,WACA,SACA,WACA,UAGIC,EAAY,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,WACnB,OACE,qBAAKC,UAAU,cAAf,SACGD,EAAWE,KAAI,SAACC,EAAOC,GAAR,OACd,8BAAcD,GAAJC,SAMZC,EAAW,SAAC,GAMX,IALLC,EAKI,EALJA,UACQC,EAIJ,EAJJC,OAKA,OACE,qBAAKP,UAAU,WAAWQ,MAAO,CAAED,OAAQD,GAA3C,SACGD,EAAUJ,KAAI,SAACC,EAAOC,GAAR,OACb,8BAAcD,EAAMO,OAAO,UAAjBN,SAMZO,EAAU,SAAC,GAUf,IAFK,IAPLL,EAOI,EAPJA,UACAM,EAMI,EANJA,cACAJ,EAKI,EALJA,OAMMK,EAAM,GACHT,EAAI,EAAGA,EAAIE,EAAUQ,OAAQV,IACpCS,EAAIE,KAAK,uBAAUX,IAGrB,IADA,IAAMY,EAAO,GACJZ,EAAI,EAAGA,EAAIQ,EAAeR,IACjCY,EAAKD,KAAK,8BAAcF,GAAJT,IAEtB,OACE,qBAAKH,UAAU,YAAYQ,MAAO,CAAED,OAAQA,GAA5C,SACGQ,KAKMC,EAAY,SAAC,GAQnB,IAAD,IAPJjB,kBAOI,MAPSF,EAOT,MANJoB,iBAMI,MANQC,MAAQC,KAAK,GAAGC,OAAO,GAM/B,MALJC,eAKI,MALMH,MAAQC,KAAK,IAAIC,OAAO,GAK9B,MAJJE,YAII,MAJG,EAIH,MAHJC,gBAGI,MAHO,OAGP,MAFJjB,kBAEI,MAFS,EAET,MADJkB,sBACI,MADa,MACb,EACEC,ECvEiB,SACvBC,EACAC,EACAL,EACAM,GAEA,GAAID,EAAIE,SAASH,GAAQ,MAAM,IAAII,MAAM,oBAGzC,IAFA,IAAMC,EAAQ,CAACL,GACXM,EAAUN,EACPM,EAAQH,SAASF,IACtBK,EAAUA,EAAQC,IAAIX,EAAMM,GAC5BG,EAAMjB,KAAKkB,GAEb,OAAOD,ED0De1B,CAAUY,EAAWI,EAASC,EAAMC,GACpDW,EAAST,EAAcZ,OACvBsB,EAASpC,EAAWc,OACpBuB,EAAW,UAAM9B,EAAa4B,GAAnB,OAA4BV,GAE7C,OACE,sBAAKxB,UAAU,YAAf,UACE,cAAC,EAAD,CAAWD,WAAYA,IACvB,cAAC,EAAD,CAAUM,UAAWoB,EAAelB,OAAQ6B,IAC5C,cAAC,EAAD,CACE/B,UAAWoB,EACXd,cAAewB,EACf5B,OAAQ6B,QEjDDC,MA/Bf,WACE,OACE,qCACE,iCACE,gCACE,qBAAKrC,UAAU,QAAf,SAWE,sDAEF,mBACEA,UAAU,SACVsC,KAAK,gDAFP,SAIE,cAAC,IAAD,CAAiBC,KAAMC,IAAUC,KAAK,cAI5C,cAAC,EAAD,QCjBSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0fe1416d.chunk.js","sourcesContent":["import \"./Timetable.scss\";\r\nimport dayjs, { Dayjs } from \"dayjs\";\r\nimport { timeRange } from \"../utils/utils\";\r\n\r\nconst defaultDaysOfWeek = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n  \"Sunday\",\r\n];\r\n\r\nconst DayHeader = ({ daysOfWeek }: { daysOfWeek: string[] }) => {\r\n  return (\r\n    <div className=\"day--header\">\r\n      {daysOfWeek.map((value, i) => (\r\n        <div key={i}>{value}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Timeline = ({\r\n  timeRange,\r\n  height: cellHeight,\r\n}: {\r\n  timeRange: Dayjs[];\r\n  height: string;\r\n}) => {\r\n  return (\r\n    <div className=\"timeline\" style={{ height: cellHeight }}>\r\n      {timeRange.map((value, i) => (\r\n        <div key={i}>{value.format(\"HH:mm\")}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DayGrid = ({\r\n  timeRange,\r\n  numDaysOfWeek,\r\n  height,\r\n}: {\r\n  timeRange: Dayjs[];\r\n  numDaysOfWeek: number;\r\n  height: string;\r\n}) => {\r\n  const col = [];\r\n  for (let i = 0; i < timeRange.length; i++) {\r\n    col.push(<div key={i}></div>);\r\n  }\r\n  const cols = [];\r\n  for (let i = 0; i < numDaysOfWeek; i++) {\r\n    cols.push(<div key={i}>{col}</div>);\r\n  }\r\n  return (\r\n    <div className=\"day--grid\" style={{ height: height }}>\r\n      {cols}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Timetable = ({\r\n  daysOfWeek = defaultDaysOfWeek,\r\n  startTime = dayjs().hour(7).minute(0),\r\n  endTime = dayjs().hour(15).minute(0),\r\n  step = 1,\r\n  stepUnit = \"hour\",\r\n  cellHeight = 3,\r\n  cellHeightUnit = \"rem\",\r\n}) => {\r\n  const timelineRange = timeRange(startTime, endTime, step, stepUnit);\r\n  const yCells = timelineRange.length;\r\n  const xCells = daysOfWeek.length;\r\n  const totalHeight = `${cellHeight * yCells}${cellHeightUnit}`;\r\n\r\n  return (\r\n    <div className=\"timetable\">\r\n      <DayHeader daysOfWeek={daysOfWeek} />\r\n      <Timeline timeRange={timelineRange} height={totalHeight} />\r\n      <DayGrid\r\n        timeRange={timelineRange}\r\n        numDaysOfWeek={xCells}\r\n        height={totalHeight}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { Dayjs } from \"dayjs\";\r\n\r\nexport const timeRange = (\r\n  start: Dayjs,\r\n  end: Dayjs,\r\n  step: number,\r\n  unit: string\r\n) => {\r\n  if (end.isBefore(start)) throw new Error(\"Wrong time order\");\r\n  const range = [start];\r\n  let current = start;\r\n  while (current.isBefore(end)) {\r\n    current = current.add(step, unit);\r\n    range.push(current);\r\n  }\r\n  return range;\r\n};\r\n","import \"./App.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Timetable } from \"./Timetable\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav>\r\n          <div className=\"title\">\r\n            {/* <svg\r\n              className=\"logo\"\r\n              width=\"54\"\r\n              height=\"54\"\r\n              viewBox=\"0 0 54 54\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path d=\"M13.5 22.1c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05zM0 38.3c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05z\" />\r\n            </svg> */}\r\n            {/* <img className=\"logo\" src={logo} alt=\"Logo\" /> */}\r\n            <span>Course Scheduler</span>\r\n          </div>\r\n          <a\r\n            className=\"github\"\r\n            href=\"https://github.com/phineasla/course-scheduler\"\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} size=\"2x\" />\r\n          </a>\r\n        </nav>\r\n      </header>\r\n      <Timetable />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}